<#@ template debug="true" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<# 
PushIndent("				");
#>
SET @jsonRows = JSON_QUERY(@json, '$.<#= relation.ProjectionRelation_ChildProjectionName #>');

---<#= relation.ProjectionRelation_ChildProjectionName #> update
UPDATE [<#= relation.DbObject1_Schema #>].[<#= relation.DbObject1_Name #>]
	SET 
		  [Deleted] = json.Deleted
		,[ModifiedBy_FK] = @userId
		,[Modified] = getdate()
		,[<#= relation.DbColumn1_Name #>] = @id
<# 
			PushIndent("		");

			foreach(var col in columns){
				WriteUpdateColumn(col);
			}
			PopIndent();
#>
	FROM OPENJSON(@jsonRows)
		WITH (	
			[<#= vwProjection.DbPrimaryColumn_Name #>] varchar(30)
			,[Deleted] [bit]
<# 
			PushIndent("			");
			foreach(var col in columns){
				WriteJsonColumn(col);
			}
			PopIndent();
#>

) AS json
WHERE ISNUMERIC(json.[<#= vwProjection.DbPrimaryColumn_Name #>]) = 1 and cast(json.[<#= vwProjection.DbPrimaryColumn_Name #>] as int) > 0 and [<#= vwProjection.DbObject_Schema #>].[<#= relation.DbObject1_Name #>].[<#= vwProjection.DbPrimaryColumn_Name #>] = cast(json.[<#= vwProjection.DbPrimaryColumn_Name #>] as int)
	--and @id not in (SELECT Entity_FK FROM [crm].[fn_GetBannedEntityIds] (@userId, <#= parentEntityType #>, 4))
---<#= relation.ProjectionRelation_ChildProjectionName #> update

